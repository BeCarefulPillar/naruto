local battleHero =  require "World.BattleHeroData"
local M = {}

function M.Start(self, obj)
    self.heroList = {}
    self.enemyList = {}

    self.view = obj.view
    self.transform = obj.transform
    self.gameObject = obj.gameObject
    self.deltaTime = CS.UnityEngine.Time.deltaTime

    --应该从playerData身上拿的 其他应该从表里面拿 暂时无成长，所有的血量一定
    local hero = battleHero.new({id = 1,typeId = 1,name = "a"})
    table.insert(self.heroList, hero)
    hero = battleHero.new({id = 2,typeId = 1,name = "a"})
    table.insert(self.heroList, hero)
    hero = battleHero.new({id = 3,typeId = 2,name = "p"})
    table.insert(self.heroList, hero)
    hero = battleHero.new({id = 4,typeId = 3,name = "c"})
    table.insert(self.heroList, hero)

    local enemy = battleHero.new({id = 1,typeId = 1,name = "a"})
    table.insert(self.enemyList, enemy)
    enemy = battleHero.new({id = 2,typeId = 1,name = "a"})
    table.insert(self.enemyList, enemy)
    enemy = battleHero.new({id = 3,typeId = 2,name = "p"})
    table.insert(self.enemyList, hero)
    enemy = battleHero.new({id = 4,typeId = 3,name = "c"})
    table.insert(self.enemyList, enemy)

    WORLD_DATA = self
end

function M.Update(self)
    for _,v in ipairs(self.heroList) do
        v:update(self.deltaTime)
    end
end

function M.LateUpdate(self)
    for _,v in ipairs(self.heroList) do
        v:lateUpdate(self.deltaTime)
    end
end

return M